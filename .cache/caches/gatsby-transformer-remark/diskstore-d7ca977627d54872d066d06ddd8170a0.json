{"expireTime":9007200800480570000,"key":"transformer-remark-markdown-html-ast-6c6f2adbcfdd7568b1f46e9dc3915c13-gatsby-remark-prismjsgatsby-remark-katexgatsby-remark-images-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Introduction","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":16,"offset":16}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":16,"offset":16}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Function pointers are literally pointers to functions.","position":{"start":{"line":3,"column":3,"offset":19},"end":{"line":3,"column":57,"offset":73}}}],"position":{"start":{"line":3,"column":3,"offset":19},"end":{"line":3,"column":57,"offset":73}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3,"column":1,"offset":17},"end":{"line":3,"column":57,"offset":73}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Function pointers are just what their name suggests, they are pointers to functions! In particular, a function pointer points to code (rather than data like what we are normally used to) and stores the start of executable code. Let’s just get straight to some code.","position":{"start":{"line":5,"column":1,"offset":75},"end":{"line":5,"column":266,"offset":340}}}],"position":{"start":{"line":5,"column":1,"offset":75},"end":{"line":5,"column":266,"offset":340}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">void print_stuff(int a)\n{\n  printf(&quot;Hi there, I am %d\\n&quot;, a);\n}\n\nint main()\n{\n  // Pointer is void type and points to print_stuff function.\n  // (int) lets us know what TYPE are the arguments for the function.\n  void (*func_ptr)(int) = &amp;print_stuff;\n  \n  // To call the function, we go:\n  (*func_ptr)(20);\n  // Here, we dereferenced the pointer and also passed in inputs for it.\n  // Note this also works even if we removed the *\n}</code></pre></div>","position":{"start":{"line":7,"column":1,"offset":342},"end":{"line":25,"column":4,"offset":788}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hi there, I am 20","position":{"start":{"line":27,"column":1,"offset":791},"end":{"line":27,"column":18,"offset":808}}}],"position":{"start":{"line":27,"column":1,"offset":791},"end":{"line":27,"column":18,"offset":808}}},{"type":"text","value":"\n"}],"position":{"start":{"line":26,"column":1,"offset":789},"end":{"line":27,"column":18,"offset":808}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that when we declared our function pointer, it is extremely important that we have those brackets around ","position":{"start":{"line":29,"column":1,"offset":810},"end":{"line":29,"column":111,"offset":920}}},{"type":"text","value":"*","position":{"start":{"line":29,"column":111,"offset":920},"end":{"line":29,"column":113,"offset":922}}},{"type":"text","value":"func_ptr or else it will be confused for a declaration of a function that returns void pointers. ","position":{"start":{"line":29,"column":113,"offset":922},"end":{"line":29,"column":210,"offset":1019}}}],"position":{"start":{"line":29,"column":1,"offset":810},"end":{"line":29,"column":210,"offset":1019}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A clearer illustration of when we would use a function pointer would be when we don’t know what the functions are at compile time.","position":{"start":{"line":31,"column":1,"offset":1021},"end":{"line":31,"column":131,"offset":1151}}}],"position":{"start":{"line":31,"column":1,"offset":1021},"end":{"line":31,"column":131,"offset":1151}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n\n// Here we declare a function.\nvoid do_stuff(int x);\n\nint main()\n{\n    void (*func_ptr)(int) = &amp;do_stuff;\n    (*func_ptr)(4);\n}\n\nvoid do_stuff(int x)\n{\n  printf(&quot;Done stuff with %d\\n&quot;,x);\n}</code></pre></div>","position":{"start":{"line":33,"column":1,"offset":1153},"end":{"line":49,"column":4,"offset":1371}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Done stuff with 4","position":{"start":{"line":51,"column":3,"offset":1375},"end":{"line":51,"column":20,"offset":1392}}}],"position":{"start":{"line":51,"column":3,"offset":1375},"end":{"line":51,"column":20,"offset":1392}}},{"type":"text","value":"\n"}],"position":{"start":{"line":51,"column":1,"offset":1373},"end":{"line":51,"column":20,"offset":1392}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So why else might we be bothered with function pointers?","position":{"start":{"line":53,"column":1,"offset":1394},"end":{"line":53,"column":57,"offset":1450}}}],"position":{"start":{"line":53,"column":1,"offset":1394},"end":{"line":53,"column":57,"offset":1450}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Efficiency","position":{"start":{"line":54,"column":3,"offset":1453},"end":{"line":54,"column":13,"offset":1463}}}],"position":{"start":{"line":54,"column":1,"offset":1451},"end":{"line":54,"column":13,"offset":1463}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Elegance","position":{"start":{"line":55,"column":3,"offset":1466},"end":{"line":55,"column":11,"offset":1474}}}],"position":{"start":{"line":55,"column":1,"offset":1464},"end":{"line":55,"column":11,"offset":1474}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Runtime binding whereby we can change the function up depending on what we feed the function at runtime","position":{"start":{"line":56,"column":3,"offset":1477},"end":{"line":56,"column":106,"offset":1580}}}],"position":{"start":{"line":56,"column":1,"offset":1475},"end":{"line":56,"column":106,"offset":1580}}},{"type":"text","value":"\n"}],"position":{"start":{"line":54,"column":1,"offset":1451},"end":{"line":56,"column":106,"offset":1580}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that with these pointers, we do not need to de-allocate memory as we are not pointing to memory.","position":{"start":{"line":58,"column":1,"offset":1582},"end":{"line":58,"column":102,"offset":1683}}}],"position":{"start":{"line":58,"column":1,"offset":1582},"end":{"line":58,"column":102,"offset":1683}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":60,"column":1,"offset":1685},"end":{"line":60,"column":4,"offset":1688}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here's another example just to drill this home:","position":{"start":{"line":62,"column":1,"offset":1690},"end":{"line":62,"column":48,"offset":1737}}}],"position":{"start":{"line":62,"column":1,"offset":1690},"end":{"line":62,"column":48,"offset":1737}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">// Our function\nint add_numbers(int x, int y)\n{\n  return x + y;\n}\n\n// Our FUNCTION POINTER:\nint (*func_ptr)(int, int);\n\n// Again, this points to a function that returns an int and takes in 2 ints as arguments.\n\n// Now to point it to a function:\nfunc_ptr = &amp;add_numbers;\n\n// To actually use this function pointer:\nint sum = (*func_ptr)(5, 10);\n\n// Here, we dereference our function pointer and pass in our arguments for the function.\n\n// Altenrative\nint sum = func_ptr(5, 10);</code></pre></div>","position":{"start":{"line":63,"column":1,"offset":1738},"end":{"line":85,"column":4,"offset":2222}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":87,"column":4,"offset":2227},"end":{"line":87,"column":11,"offset":2234}}}],"position":{"start":{"line":87,"column":1,"offset":2224},"end":{"line":87,"column":11,"offset":2234}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Function pointers are just an address referring to an area of memory with executable code.","position":{"start":{"line":88,"column":1,"offset":2235},"end":{"line":88,"column":91,"offset":2325}}}],"position":{"start":{"line":88,"column":1,"offset":2235},"end":{"line":88,"column":91,"offset":2325}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":88,"column":91,"offset":2325}}}}