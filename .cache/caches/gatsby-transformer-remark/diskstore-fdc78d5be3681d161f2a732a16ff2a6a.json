{"expireTime":9007200800480545000,"key":"transformer-remark-markdown-html-ast-b423695f5e5bc84185f7366902249e01-gatsby-remark-prismjsgatsby-remark-katexgatsby-remark-images-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Introduction","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":16,"offset":16}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":16,"offset":16}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Function pointers are literally pointers to functions.","position":{"start":{"line":3,"column":3,"offset":19},"end":{"line":3,"column":57,"offset":73}}}],"position":{"start":{"line":3,"column":3,"offset":19},"end":{"line":3,"column":57,"offset":73}}},{"type":"text","value":"\n"}],"position":{"start":{"line":3,"column":1,"offset":17},"end":{"line":3,"column":57,"offset":73}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Function pointers are just what their name suggests, they are pointers to functions! In particular, a function pointer points to code (rather than data like what we are normally used to) and stores the start of executable code. Let’s just get straight to some code.","position":{"start":{"line":5,"column":1,"offset":75},"end":{"line":5,"column":266,"offset":340}}}],"position":{"start":{"line":5,"column":1,"offset":75},"end":{"line":5,"column":266,"offset":340}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">void print_stuff(int a)\n{\n  printf(&quot;Hi there, I am %d\\n&quot;, a);\n}\n\nint main()\n{\n  // Pointer is void type and points to print_stuff function.\n  // (int) lets us know what TYPE are the arguments for the function.\n  void (*func_ptr)(int) = &amp;print_stuff;\n  \n  // To call the function, we go:\n  (*func_ptr)(20);\n  // Here, we dereferenced the pointer and also passed in inputs for it.\n  // Note this also works even if we removed the *\n}</code></pre></div>","position":{"start":{"line":7,"column":1,"offset":342},"end":{"line":24,"column":4,"offset":782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Hi there, I am 20","position":{"start":{"line":25,"column":2,"offset":784},"end":{"line":25,"column":19,"offset":801}}}],"position":{"start":{"line":25,"column":2,"offset":784},"end":{"line":25,"column":19,"offset":801}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":1,"offset":783},"end":{"line":25,"column":19,"offset":801}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that when we declared our function pointer, it is extremely important that we have those brackets around ","position":{"start":{"line":27,"column":1,"offset":803},"end":{"line":27,"column":111,"offset":913}}},{"type":"text","value":"*","position":{"start":{"line":27,"column":111,"offset":913},"end":{"line":27,"column":113,"offset":915}}},{"type":"text","value":"func_ptr or else it will be confused for a declaration of a function that returns void pointers. ","position":{"start":{"line":27,"column":113,"offset":915},"end":{"line":27,"column":210,"offset":1012}}}],"position":{"start":{"line":27,"column":1,"offset":803},"end":{"line":27,"column":210,"offset":1012}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A clearer illustration of when we would use a function pointer would be when we don’t know what the functions are at compile time.","position":{"start":{"line":29,"column":1,"offset":1014},"end":{"line":29,"column":131,"offset":1144}}}],"position":{"start":{"line":29,"column":1,"offset":1014},"end":{"line":29,"column":131,"offset":1144}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n\n// Here we declare a function.\nvoid do_stuff(int x);\n\nint main()\n{\n    void (*func_ptr)(int) = &amp;do_stuff;\n    (*func_ptr)(4);\n}\n\nvoid do_stuff(int x)\n{\n  printf(&quot;Done stuff with %d\\n&quot;,x);\n}</code></pre></div>","position":{"start":{"line":31,"column":1,"offset":1146},"end":{"line":47,"column":4,"offset":1364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Done stuff with 4","position":{"start":{"line":49,"column":3,"offset":1368},"end":{"line":49,"column":20,"offset":1385}}}],"position":{"start":{"line":49,"column":3,"offset":1368},"end":{"line":49,"column":20,"offset":1385}}},{"type":"text","value":"\n"}],"position":{"start":{"line":49,"column":1,"offset":1366},"end":{"line":49,"column":20,"offset":1385}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So why else might we be bothered with function pointers?","position":{"start":{"line":51,"column":1,"offset":1387},"end":{"line":51,"column":57,"offset":1443}}}],"position":{"start":{"line":51,"column":1,"offset":1387},"end":{"line":51,"column":57,"offset":1443}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Efficiency","position":{"start":{"line":52,"column":3,"offset":1446},"end":{"line":52,"column":13,"offset":1456}}}],"position":{"start":{"line":52,"column":1,"offset":1444},"end":{"line":52,"column":13,"offset":1456}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Elegance","position":{"start":{"line":53,"column":3,"offset":1459},"end":{"line":53,"column":11,"offset":1467}}}],"position":{"start":{"line":53,"column":1,"offset":1457},"end":{"line":53,"column":11,"offset":1467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Runtime binding whereby we can change the function up depending on what we feed the function at runtime","position":{"start":{"line":54,"column":3,"offset":1470},"end":{"line":54,"column":106,"offset":1573}}}],"position":{"start":{"line":54,"column":1,"offset":1468},"end":{"line":54,"column":106,"offset":1573}}},{"type":"text","value":"\n"}],"position":{"start":{"line":52,"column":1,"offset":1444},"end":{"line":54,"column":106,"offset":1573}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that with these pointers, we do not need to de-allocate memory as we are not pointing to memory.","position":{"start":{"line":56,"column":1,"offset":1575},"end":{"line":56,"column":102,"offset":1676}}}],"position":{"start":{"line":56,"column":1,"offset":1575},"end":{"line":56,"column":102,"offset":1676}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":58,"column":1,"offset":1678},"end":{"line":58,"column":4,"offset":1681}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here's another example just to drill this home:","position":{"start":{"line":60,"column":1,"offset":1683},"end":{"line":60,"column":48,"offset":1730}}}],"position":{"start":{"line":60,"column":1,"offset":1683},"end":{"line":60,"column":48,"offset":1730}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">// Our function\nint add_numbers(int x, int y)\n{\n  return x + y;\n}\n\n// Our FUNCTION POINTER:\nint (*func_ptr)(int, int);\n\n// Again, this points to a function that returns an int and takes in 2 ints as arguments.\n\n// Now to point it to a function:\nfunc_ptr = &amp;add_numbers;\n\n// To actually use this function pointer:\nint sum = (*func_ptr)(5, 10);\n\n// Here, we dereference our function pointer and pass in our arguments for the function.\n\n// Altenrative\nint sum = func_ptr(5, 10);</code></pre></div>","position":{"start":{"line":61,"column":1,"offset":1731},"end":{"line":83,"column":4,"offset":2215}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Summary","position":{"start":{"line":85,"column":4,"offset":2220},"end":{"line":85,"column":11,"offset":2227}}}],"position":{"start":{"line":85,"column":1,"offset":2217},"end":{"line":85,"column":11,"offset":2227}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Function pointers are just an address referring to an area of memory with executable code.","position":{"start":{"line":86,"column":1,"offset":2228},"end":{"line":86,"column":91,"offset":2318}}}],"position":{"start":{"line":86,"column":1,"offset":2228},"end":{"line":86,"column":91,"offset":2318}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":86,"column":91,"offset":2318}}}}